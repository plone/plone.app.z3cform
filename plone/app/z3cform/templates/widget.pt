<div class="mb-3 field fieldname-${python:widget.name} widget-mode-${python:widget.mode}${error_class}${empty_class} ${python:getattr(widget, 'wrapper_css_class', False) or False}"
     id="formfield-${python:widget.id}"
     metal:define-macro="widget-wrapper"
     data-fieldname="${widget/name}"
     tal:define="
       widget nocall:context;
       error python:widget.error;
       error_class python:error and ' error' or '';
       empty_values python: (None, '', [], ('', '', '', '00', '00', ''), ('', '', ''));
       empty_class python: (widget.value in empty_values) and ' empty' or '';
     "
     i18n:domain="plone"
>
  <label class="form-label"
         for="${python:widget.id}"
         tal:condition="python: widget.mode == 'input' and widget.label"
  >
    <span tal:replace="python:widget.label"
          i18n:translate=""
    >label</span>

    <span class="required"
          title="Required"
          tal:condition="python:widget.required"
          i18n:attributes="title title_required;"
    ></span>
  </label>
  <b class="widget-label form-label d-block"
     tal:condition="python: widget.mode == 'display' and widget.label"
  >
    <span tal:replace="python:widget.label"
          i18n:translate=""
    >label</span>
  </b>

  <input metal:define-slot="widget"
         type="text"
         tal:replace="structure python:widget.render()"
  />

  <div class="form-text"
       tal:define="
         description python: getattr(widget, 'description', widget.field.description);
       "
       tal:condition="python:description and widget.mode == 'input'"
       tal:content="structure description"
       i18n:translate=""
  >
      help text
  </div>

  <div tal:condition="error"
       tal:replace="structure python:error.render() or False"
  >
        Error
  </div>

</div>
